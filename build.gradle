import java.time.OffsetDateTime
import java.time.ZoneOffset

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.cadixdev.licenser'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    var manifestAttributes = [
            "Specification-Title"      : mod_name,
            "Specification-Vendor"     : mod_author,
            "Specification-Version"    : "1", // We are version 1 of ourselves
            "Implementation-Title"     : mod_name,
            "Implementation-Version"   : project.jar.archiveVersion,
            "Implementation-Vendor"    : mod_author,
            "Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Built-On-Java"            : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
            "Build-On-Minecraft"       : minecraft_version
    ]

    jar {
        from("LICENSE.txt") {
            rename {
                "LICENSE_${archiveBaseName.get()}"
            }

            manifest.attributes(manifestAttributes)
            includeEmptyDirs false
            preserveFileTimestamps = false
            reproducibleFileOrder = true
        }
    }

    repositories {
        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name 'Quilt (Release)'
            url 'https://maven.quiltmc.org/repository/release/'
        }

        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven { url "https://maven.architectury.dev/" }

        mavenLocal()
    }

    final var actualDateTime = OffsetDateTime.now(ZoneOffset.UTC).withNano(0)

    license {
        ignoreFailures = false
        header = rootProject.file('LicenseHeader.txt')
        include '**/*.java'
        include '**/*.kt'
        exclude '**/package-info.java'
        exclude '**/module-info.java'
        newLine = false
        properties {
            year = actualDateTime.getYear()
            name = mod_name
            source = mod_source
            author = mod_author
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}
